---
import { getCollection } from "astro:content";
import Shell from "../components/shell.astro";

import { storytelling } from "../data/site-nav-data.json";
import { generate_shape } from "./generate_shape";
const { socials, nav } = storytelling;

const demos: {
  title: string;
  audio?: string;
  icon: string;
  color: string;
  column: number;
  row: number;
  shape: string;
  links?: { [key: string]: string };
}[] = [
  {
    title: "Animation Voice Demo",
    audio: "demo_files/Lee-Orr Animation Demo.mp3",
    icon: "icofont-video-alt",
    color: "var(--category-7)",
    column: 2,
    row: 2,
    shape: generate_shape(),
  },
  {
    title: "Commercial Voice Demo",
    audio: "demo_files/Lee-Orr Commercial Demo.mp3",
    icon: "icofont-radio-mic",
    color: "var(--category-1)",
    column: 4,
    row: 1,
    shape: generate_shape(),
  },
  {
    title: "Acting Resume",
    links: {
      actor: "Resume With Headshot",
      actor_without_headshot: "Resume Without Headshot",
    },
    icon: "icofont-video",
    color: "var(--category-5)",
    column: 1,
    row: 1,
    shape: generate_shape(),
  },
  {
    title: "Headshots",
    links: {
      headshots: "my Headshots",
    },
    icon: "icofont-photo",
    color: "rgb(160, 5, 108)",
    column: 5,
    row: 2,
    shape: generate_shape(),
  },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="/styles.css" />
    <link rel="stylesheet" href="/icofont.min.css" />
    <base href="/" />
    <title>Lee-Orr</title>
  </head>
  <Shell area="storytelling" socials={socials} nav={nav}>
    <div class="w-screen h-full relative">
      <div
        class="absolute top-0 left-0 bottom-0 right-0 overflow-y-auto overflow-x-hidden"
      >
        <div
          class="grid grid-cols-6 grid-rows-4 gap-5 w-full p-10 h-full items-center justify-start"
        >
          {
            demos.map(
              ({ title, audio, icon, color, shape, column, row, links }) => {
                let style = `clip-path: ${shape}; grid-column-start: ${column}; grid-row-start: ${row};`;
                let class_string = `flex-col m-[3%] p-5 flex gap-5 col-span-2 row-span-2`;
                let bg = `background-color: ${color};`;
                return (
                  <div class={class_string} style={style}>
                    <div
                      class="fixed w-screen h-screen top-0 left-0 right-0 bottom-0 z-[-10] pointer-events-none"
                      style={bg}
                    />
                    <h2 class="text-2xl text-text-200 font-bold flex flex-row justify-between items-center">
                      <>
                        <span class="underline-offset-8 underline">
                          {title}
                        </span>
                        <span class="flex flex-row justify-end gap-1 items-center">
                          <span class="rounded-full flex flex-row justify-center items-center">
                            <i class={icon} />
                          </span>
                        </span>
                      </>
                    </h2>
                    <div class="p-2 flex-col flex gap-2">
                      {audio ? (
                        <audio
                          controls
                          class="bg-primary-200 rounded-full text-text-700 border-solid border-black border-2 focus:border-primary-100"
                        >
                          <source src={audio} type="audio/mpeg" />
                        </audio>
                      ) : (
                        ""
                      )}
                      {links
                        ? Object.keys(links).map((link) => (
                            <a
                              class="rounded-full bg-text-800 text-text-100 p-3 text-sm border-solid border-black border-2 hover:border-primary-100 flex justify-center items-center"
                              target="_blank"
                              href={link}
                            >
                              View {links[link]}
                            </a>
                          ))
                        : ""}
                    </div>
                  </div>
                );
              }
            )
          }
        </div>
      </div>
    </div>
  </Shell>


</html>
